library(readr)
library(readr)
library(tidyr)
library(ggplot2)
library(ggfortify)
library(pheatmap)
library(SummarizedExperiment)
```{r, echo=FALSE, message=FALSE}
ST003564_AN005856_Results$IonMode <- "Negative"
# Crear matrices de intensidades y metadatos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
# Crear matrices de intensidades y metadatos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
# Importe de resultados obtenido de Metabolomics Workbench (ST003564)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",
header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",
header = TRUE, sep = "\t")
# Separar 'mz_rt' en 'mz' y 'rt'
ST003564_AN005855_Results <- ST003564_AN005855_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
ST003564_AN005856_Results <- ST003564_AN005856_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
# Agregar modo de ionización
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
# Crear matrices de intensidades y metadatos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos_neg <- as.matrix(ST003564_AN005856_Results[,
!(names(ST003564_AN005856_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos <- rbind(matrizDatos_pos, matrizDatos_neg)
colData <- data.frame(SampleName = colnames(matrizDatos),
SampleType = ifelse(grepl("blank", colnames(matrizDatos)),
"Blanco", "Muestra"),
row.names = colnames(matrizDatos))
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)),
rep("Negative", nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
# Creacion de la clase de SummarizedExperiment
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
dim(PEC1)
PEC1
assay(PEC1)
assay(PEC1)%counts
assay(PEC1)$counts
assays(PEC1)$counts
head(assays(PEC1)$counts)
head(assays(PEC1)$counts, 2)
rowRanges(PEC1)
colData(PEC1)
"Control de Calidad", "Muestra")
rowData(PEC1)
tail(rowData(PEC1), 4)
colData(PEC1)
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
# Leer archivos de ionización positiva y negativa
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",
header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",
header = TRUE, sep = "\t")
# Agregar modo de ionización
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
# Separar 'mz_rt' en 'mz' y 'rt'
ST003564_AN005855_Results <- ST003564_AN005855_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
ST003564_AN005856_Results <- ST003564_AN005856_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
# Crear la matriz de datos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos_neg <- as.matrix(ST003564_AN005856_Results[,
!(names(ST003564_AN005856_Results) %in%
c("mz", "rt", "IonMode"))])
# Combinar ambos datasets en una sola matriz de intensidades
matrizDatos <- rbind(matrizDatos_pos, matrizDatos_neg)
# Crear el colData
muestras <- colnames(matrizDatos)
# Definir tipo de muestra (blancos, controles de calidad y muestras normales)
tipoMuestra <- ifelse(grepl("blank", muestras, ignore.case = TRUE), "Blanco",
ifelse(grepl("QC", muestras, ignore.case = TRUE),
"Control de Calidad", "Muestra"))
# Crear colData con data.frame estándar
colData <- data.frame(SampleName = muestras, SampleType = tipoMuestra,
row.names = muestras)
# Crear el rowData
# Unir las filas de ambos datasets y conservar mz, rt e IonMode
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz,
ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt,
ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive",
nrow(ST003564_AN005855_Results)),
rep("Negative",
nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
```{r, echo=FALSE}
PEC1
colData(PEC1)
tail(rowData(PEC1), 4)
metadata(PEC1)
dimnames(PEC1)
```{r}
PEC1[1:5, 1:3]
head(colData(PEC1), 1:3)
muestras_biologicas
muestras_id
# Filtrar solo las muestras biológicas
muestras_id <- colData(PEC1)$SampleType == "Sample"
muestras_id
# E
muestras_biologicas <- PEC1[, !(colData(PEC1)$SampleType %in% c("QC", "Blank"))]
muestras_biologicas
muestras_biologicas
# E
muestras_biologicas <- PEC1[, !(colData(PEC1)$SampleType %in% c("QC", "Blank"))]
muestras_biologicaspheatmap(corr_PEC1, clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",
main = "Clustering de Muestras (Spearman)")
# Crear el heatmap
pheatmap(assay(muestras_reales), scale = "row",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
show_rownames = FALSE, show_colnames = TRUE)
# Crear el heatmap
pheatmap(assay(muestras_reales), scale = "row",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
show_rownames = FALSE, show_colnames = TRUE)
# Crear el heatmap
pheatmap(assay(muestras_biologicas), scale = "row",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
show_rownames = FALSE, show_colnames = TRUE)
