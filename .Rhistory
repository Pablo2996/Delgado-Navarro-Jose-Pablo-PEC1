library(readr)
library(SummarizedExperiment)
ST003564_AN005855_Results <- read.table("~/ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t", row.names = 1)
library(readr)
library(SummarizedExperiment)
ST003564_AN005855_Results <- read.table("~/ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t", row.names = 1)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t", row.names = 1)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005855_Results
matrizDatos <- as.matrix(datos[, -1])
matrizDatos <- as.matrix(ST003564_AN005855_Results[, -1])
matrizDatos
ST003565_AN005855_Results <- read.table("ST003565_AN005855_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005855_Results
ST003564_AN005856_Results <- read.table("ST003565_AN005855_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005855_Results
ST003564_AN005855_Results
ST003564_AN005856_Results
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
datos_PEC1 <- rbind(ST003564_AN005855_Results, ST003564_AN005856_Results)
datos_PEC1
tail(datos_PEC1)
# Separar 'mz_rt' en 'mz' y 'rt'
datos_PEC1 <- datos_PEC1 %>%
separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
# Separar 'mz_rt' en 'mz' y 'rt'
datos_PEC1 <- datos_PEC1 %>%
separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
# Separar 'mz_rt' en 'mz' y 'rt'
datos_PEC1 <- datos_PEC1 %>% separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
library(tidyr)
# Separar 'mz_rt' en 'mz' y 'rt'
datos_PEC1 <- datos_PEC1 %>% separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
head(datos_PEC1)
tail(datos_PEC1)
matrizDatos
# Crear el colData
muestras <- colnames(matrizDatos)
# Definir el tipo de muestra (blancos, controles de calidad y muestras normales)
tipoMuestra <- ifelse(grepl("blank", muestras, ignore.case = TRUE), "Blanco", ifelse(grepl("QC", muestras, ignore.case = TRUE), "Control de Calidad", "Muestra"))
# Determinar el modo de ionización para cada muestra buscando su presencia en los archivos originales
ionMode <- ifelse(muestras %in% colnames(ST003564_AN005855_Results), "Positive", "Negative")
# Crear colData data.frame
colData <- data.frame(SampleName = muestras, SampleType = tipoMuestra, IonMode = ionMode, row.names = muestras)
colData
View(ST003564_AN005855_Results)
library(readr)
library(tidyr)
library(SummarizedExperiment)
library(SummarizedExperiment)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
datos_PEC1 <- rbind(ST003564_AN005855_Results, ST003564_AN005856_Results)
head(datos_PEC1)
View(datos_PEC1)
head(datos_PEC1)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",  header = TRUE, sep = "\t")
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
```{r, echo=TRUE}
# Separar 'mz_rt' en 'mz' y 'rt'
ST003564_AN005855_Results <- ST003564_AN005855_Results %>% separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
ST003564_AN005856_Results <- ST003564_AN005856_Results %>% separate(col = mz_rt, into = c("mz", "rt"), sep = "_", convert = TRUE)
tail(ST003564_AN005856_Results)
# Crear la matriz de datos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[, !(names(datos_pos) %in% c("mz", "rt", "IonMode"))])
# Crear la matriz de datos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[, !(names(ST003564_AN005855_Results) %in% c("mz", "rt", "IonMode"))])
matrizDatos_neg <- as.matrix(ST003564_AN005856_Results[, !(names(ST003564_AN005856_Results) %in% c("mz", "rt", "IonMode"))])
# Combinar ambos datasets en una sola matriz de intensidades
matrizDatos <- rbind(matrizDatos_pos, matrizDatos_neg)
matrizDatos
# Crear el colData
muestras <- colnames(matrizDatos)
# Definir tipo de muestra (blancos, controles de calidad y muestras normales)
tipoMuestra <- ifelse(grepl("blank", muestras, ignore.case = TRUE), "Blanco",
ifelse(grepl("QC", muestras, ignore.case = TRUE), "Control de Calidad", "Muestra"))
# Crear colData con data.frame estándar
colData <- data.frame(SampleName = muestras, SampleType = tipoMuestra, row.names = muestras)
colData
# Crear el colData
muestras <- colnames(matrizDatos)
# Definir tipo de muestra (blancos, controles de calidad y muestras normales)
tipoMuestra <- ifelse(grepl("blank", muestras, ignore.case = TRUE), "Blanco",
ifelse(grepl("QC", muestras, ignore.case = TRUE), "Control de Calidad", "Muestra"))
# Crear colData con data.frame estándar
colData <- data.frame(SampleName = muestras, SampleType = tipoMuestra, row.names = muestras)
colData
# Crear el rowData
# Unir las filas de ambos datasets y conservar mz, rt e IonMode
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)), rep("Negative", x =      nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
# Crear el rowData
# Unir las filas de ambos datasets y conservar mz, rt e IonMode
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)), rep("Negative", nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
# Crear el rowData
# Unir las filas de ambos datasets y conservar mz, rt e IonMode
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)), rep("Negative", nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
rowData
tail(rowData)
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
PEC1
head(matrizDatos, 3)
# Número de características (filas) y muestras (columnas)
cat("Características:", nrow(se), "\nMuestras:", ncol(se), "\n")
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
PEC1
# Número de características (filas) y muestras (columnas)
cat("Características:", nrow(PEC1), "\nMuestras:", ncol(PEC1), "\n")
# Número de características (filas) y muestras (columnas)
cat("Metabolítos:", nrow(PEC1), "\nMuestras:", ncol(PEC1), "\n")
# Graficar el histograma de intensidades (log10)
hist(log10(assay(se)[, 1:50] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)[, 1:50] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)[, 1:50] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Graficar el histograma de intensidades (log10)
hist(log10(assays(PEC1)[, 1:50] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)[, 1:50] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)
breaks = 50,
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)
dim(assay(PEC1))
# Graficar el histograma de intensidades (log10)
hist(log10(assay(PEC1)[, 1:40] + 1),  # usa algunas columnas si son muchas
breaks = 50,
col = "skyblue",
main = "Distribución de Intensidades (log10)",
xlab = "Intensidad (log10)")
# Ver la información de las características (m/z, rt, IonMode)
head(rowData(PEC1)
# Ver la información de las características (m/z, rt, IonMode)
head(rowData(PEC1))
tail(rowData(PEC1)
tail(rowData(PEC1))
# Ver la información de las características (m/z, rt, IonMode)
head(rowData(PEC1))
tail(rowData(PEC1))
library(ggplot2)
library(ggfortify)
install.packages("ggfortify")
ggfortify
library(ggfortify)
# Realizar PCA sobre la matriz de intensidades
PCA_PEC1 <- prcomp(t(assay(PEC1)), scale. = TRUE)
# Graficar el PCA coloreando por SampleType o por IonMode
autoplot(pca_res, data = as.data.frame(colData(PEC1)),
colour = "SampleType") +
theme_minimal() +
ggtitle("PCA de Muestras")
# Graficar el PCA coloreando por SampleType o por IonMode
autoplot(PCA_PEC1, data = as.data.frame(colData(PEC1)),
colour = "SampleType") +
theme_minimal() +
ggtitle("PCA de Muestras")
library(pheatmap)
install.packages("pheatmap")
library(pheatmap)
# Calcular correlación
corr_PEC1 <- cor(assay(PEC1), method = "spearman")
# Generar un heatmap para observar agrupamientos
pheatmap(corr_PEC1,
clustering_distance_rows = "correlation",
clustering_distance_cols = "correlation",
main = "Clustering de Muestras (Spearman)")
# Graficar el PCA coloreando por IonMode (si la información está en colData)
autoplot(pca_res, data = as.data.frame(colData(se)),
colour = "IonMode") +
theme_minimal() +
ggtitle("PCA diferenciando Ionización")
# Graficar el PCA coloreando por IonMode (si la información está en colData)
autoplot(PCA_PEC1, data = as.data.frame(colData(PEC1)),
colour = "IonMode") +
theme_minimal() +
ggtitle("PCA diferenciando Ionización")
> # Graficar el PCA coloreando por IonMode (si la información está en colData)
# Graficar el PCA coloreando por IonMode (si la información está en colData)
autoplot(PCA_PEC1, data = as.data.frame(colData(PEC1)),
colour = "IonMode") +
theme_minimal() +
ggtitle("PCA diferenciando Ionización")
# Graficar el PCA coloreando por IonMode (si la información está en colData)
autoplot(PCA_PEC1, data = as.data.frame(colData(PEC1)),
colour = "IonMode") +
theme_minimal() +
ggtitle("PCA diferenciando Ionización")
# Visualizar las primeras filas de colData (metadatos de muestras)
head(colData(PEC1))
tail(rowData(PEC1))
# Graficar el PCA coloreando por IonMode (si la información está en colData)
autoplot(PCA_PEC1, data = as.data.frame(rowData(PEC1)),
colour = "IonMode") +
theme_minimal() +
ggtitle("PCA diferenciando Ionización")
# Abstract
Este estudio evalúa la viabilidad de utilizar datos de metabolómica provenientes de Pap tests, integrados en un objeto SummarizedExperiment en R, para establecer una base de referencia en mujeres con citología cervical normal. Se seleccionó el dataset ST003564 del Metabolomics Workbench debido a su calidad y metadatos consistentes. Se realizó el procesamiento de datos, incluyendo la separación de la columna mz_rt en mz (mass-to-charge ratio) y rt (tiempo de retención), y se incorporó una variable que indica el modo de ionización (positivo/negativo). Posteriormente, se llevó a cabo un análisis exploratorio mediante histogramas, análisis de componentes principales (PCA) y clustering, lo que permitió identificar la distribución de intensidades y la agrupación de las muestras. Estos hallazgos respaldan la robustez del dataset para estudios futuros en metabolómica y biomarcadores.
# Importe de resultados obtenido de Metabolomics Workbench (ST003564)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",
header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",
header = TRUE, sep = "\t")
# Separar 'mz_rt' en 'mz' y 'rt'
ST003564_AN005855_Results <- ST003564_AN005855_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
ST003564_AN005856_Results <- ST003564_AN005856_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
# Agregar modo de ionización
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
# Crear matrices de intensidades y metadatos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos_neg <- as.matrix(ST003564_AN005856_Results[,
!(names(ST003564_AN005856_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos <- rbind(matrizDatos_pos, matrizDatos_neg)
colData <- data.frame(SampleName = colnames(matrizDatos),
SampleType = ifelse(grepl("blank", colnames(matrizDatos)),
"Blanco", "Muestra"),
row.names = colnames(matrizDatos))
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)),
rep("Negative", nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
# Creacion de la clase de SummarizedExperiment
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
library(SummarizedExperiment)
library(tidyr)
# Importe de resultados obtenido de Metabolomics Workbench (ST003564)
ST003564_AN005855_Results <- read.table("ST003564_AN005855_Results.txt",
header = TRUE, sep = "\t")
ST003564_AN005856_Results <- read.table("ST003564_AN005856_Results.txt",
header = TRUE, sep = "\t")
# Separar 'mz_rt' en 'mz' y 'rt'
ST003564_AN005855_Results <- ST003564_AN005855_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
ST003564_AN005856_Results <- ST003564_AN005856_Results %>% separate(col = mz_rt,
into = c("mz", "rt"), sep = "_", convert = TRUE)
# Agregar modo de ionización
ST003564_AN005855_Results$IonMode <- "Positive"
ST003564_AN005856_Results$IonMode <- "Negative"
# Crear matrices de intensidades y metadatos
matrizDatos_pos <- as.matrix(ST003564_AN005855_Results[,
!(names(ST003564_AN005855_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos_neg <- as.matrix(ST003564_AN005856_Results[,
!(names(ST003564_AN005856_Results) %in%
c("mz", "rt", "IonMode"))])
matrizDatos <- rbind(matrizDatos_pos, matrizDatos_neg)
colData <- data.frame(SampleName = colnames(matrizDatos),
SampleType = ifelse(grepl("blank", colnames(matrizDatos)),
"Blanco", "Muestra"),
row.names = colnames(matrizDatos))
rowData <- data.frame(mz = c(ST003564_AN005855_Results$mz, ST003564_AN005856_Results$mz),
rt = c(ST003564_AN005855_Results$rt, ST003564_AN005856_Results$rt),
IonMode = c(rep("Positive", nrow(ST003564_AN005855_Results)),
rep("Negative", nrow(ST003564_AN005856_Results))),
row.names = rownames(matrizDatos))
# Creacion de la clase de SummarizedExperiment
PEC1 <- SummarizedExperiment(
assays = list(counts = matrizDatos),
colData = colData,
rowData = rowData
)
PEC1
head(summary(assay(PEC1)))
